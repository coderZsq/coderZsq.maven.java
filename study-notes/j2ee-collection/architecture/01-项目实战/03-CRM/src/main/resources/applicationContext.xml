<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1 制定包扫描路径 扫描@Controller @Service -->
    <context:component-scan base-package="com.coderZsq.crm"/>

    <!--2 加载db.properties配置文件-->
    <context:property-placeholder location="classpath:db.properties" system-properties-mode="NEVER"/>

    <!--3配置连接池 druid-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--其他属性: 初始化大小: 最大连接数,连接超时时间, 空闲连接的存活时间 -->
    </bean>

    <!--4 配置一个sqlSessionFactory对象-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/coderZsq/crm/mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.coderZsq.crm.domain"/>
        <property name="configLocation" value="classpath:mybatis-cfg.xml"/>
        <!-- 注意其他配置 -->
        <property name="plugins">
            <array>
                 <bean class="com.github.pagehelper.PageInterceptor">
                     <property name="properties">
                         <!-- 使用下面的方式配置参数, 一行配置一个 -->
                         <value></value>
                     </property>
                 </bean>
                 <!--<bean class="com.coderZsq.crm.plugin.ExamplePlugin"/>-->
            </array>
        </property>
    </bean>

    <!--5 配置事务管理器-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启事务注解 扫描Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 2. 切入之后的具体操作 进行事务控制的TransactionInterceptor -->
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <!--所有的增, 删,改方法 需要事务控制-->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <!-- 面向切片编程 -->
    <aop:config>
        <!-- 1. 指定切入点 -->
        <aop:pointcut id="pc" expression="execution(* com.coderZsq.crm.service.*.*(..))"></aop:pointcut>
        <!-- 3. 把切入点和具体事务关联起来 -->
        <aop:advisor advice-ref="advice" pointcut-ref="pc"/>
    </aop:config>
    <!--6 配置一个mapper扫描器 扫描Mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.coderZsq.crm.mapper"/>
    </bean>
</beans>